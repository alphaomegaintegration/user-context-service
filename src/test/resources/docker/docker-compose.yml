version: '3.8'
services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 22181:2181
#
#    networks:
#      node_net:
#        ipv4_address: 172.28.1.81
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    ports:
#      - 29092:29092
#      - 9092:9092
#      - 9093:9093
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092,,EXTERNAL://172.28.1.93:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#
#    networks:
#      node_net:
#        ipv4_address: 172.28.1.93

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      node_net:
        ipv4_address: 172.28.1.31

  postgres2:
    image: postgres
    volumes:
      - postgres_data2:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: batch
      POSTGRES_USER: batchuser
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    networks:
      node_net:
        ipv4_address: 172.28.1.32

  keycloak:
    #image: quay.io/keycloak/keycloak:legacy
    image: bitnami/keycloak:22.0.1
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8080:8080
    depends_on:
      - postgres

    networks:
      node_net:
        ipv4_address: 172.28.1.90

  cache:
    image: redis:6.2-alpine
    #image: redis:5.0.3-alpine
    restart: always
    ports:
      - '6379:6379'
    #command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    command: redis-server /usr/local/etc/redis/redis.conf --loglevel verbose --save 20 1
    volumes:
      - cache:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - $PWD/redis-data:/var/lib/redis

    #environment:
     # - REDIS_REPLICATION_MODE=master

    networks:
      node_net:
        ipv4_address: 172.28.1.79



volumes:
  cache:
    driver: local
  postgres_data:
    driver: local
  postgres_data2:
    driver: local

networks:
  node_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
