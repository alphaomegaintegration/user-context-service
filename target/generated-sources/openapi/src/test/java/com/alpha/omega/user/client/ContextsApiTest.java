/*
 * user-context-service
 * Data Platform User Context Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alpha.omega.user.client;

import com.alpha.omega.user.model.Context;
import com.alpha.omega.user.model.ContextPage;
import com.alpha.omega.user.model.Role;
import com.alpha.omega.user.model.RolePage;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for ContextsApi
 */
@Ignore
public class ContextsApiTest {

    private final ContextsApi api = new ContextsApi();

    
    /**
     * get roles by contextId
     *
     * User must have UPDATE_CONTEXTS permission
     */
    @Test
    public void addAdditionalRolesByContextIdTest()  {
        String contextId = null;
        Role role = null;
        Context response = api.addAdditionalRolesByContextId(contextId, role).block();

        // TODO: test validations
    }
    
    /**
     * creates new context via upsert
     *
     * User must have CREATE_CONTEXTS permission
     */
    @Test
    public void createContextTest()  {
        Context context = null;
        Context response = api.createContext(context).block();

        // TODO: test validations
    }
    
    /**
     * deletes context by contextId
     *
     * User must have DELETE_CONTEXTS permission
     */
    @Test
    public void deleteContextByContextIdTest()  {
        String contextId = null;
        api.deleteContextByContextId(contextId).block();

        // TODO: test validations
    }
    
    /**
     * gets all contexts
     *
     * User must have LIST_CONTEXTS permission
     */
    @Test
    public void getAllContextsTest()  {
        Integer page = null;
        Integer pageSize = null;
        String direction = null;
        ContextPage response = api.getAllContexts(page, pageSize, direction).block();

        // TODO: test validations
    }
    
    /**
     * gets context by contextId
     *
     * User must have LIST_CONTEXTS permission
     */
    @Test
    public void getContextByContextIdTest()  {
        String contextId = null;
        Context response = api.getContextByContextId(contextId).block();

        // TODO: test validations
    }
    
    /**
     * get context by contextId and roleId
     *
     * User must have LIST_CONTEXTS permission
     */
    @Test
    public void getRoleByContextIdAndRoleIdTest()  {
        String contextId = null;
        String roleId = null;
        Role response = api.getRoleByContextIdAndRoleId(contextId, roleId).block();

        // TODO: test validations
    }
    
    /**
     * get roles by contextId
     *
     * User must have LIST_CONTEXTS permission
     */
    @Test
    public void getRolesByContextIdTest()  {
        String contextId = null;
        RolePage response = api.getRolesByContextId(contextId).block();

        // TODO: test validations
    }
    
    /**
     * updates context by contextId
     *
     * User must have UPDATE_CONTEXTS permission
     */
    @Test
    public void updateContextByContextIdTest()  {
        String contextId = null;
        Context context = null;
        Context response = api.updateContextByContextId(contextId, context).block();

        // TODO: test validations
    }
    
}
